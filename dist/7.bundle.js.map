{"version":3,"sources":["webpack:///./src/utils/download.ts","webpack:///util (ignored)","webpack:///util (ignored)?3018"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+C;AAEhB;AAExB,SAAe,eAAe,CAAC,OAAgB,EAAE,GAAY;;;;;;oBAC5D,OAAO,GAAU,IAAI,kCAAK,EAAE,CAAC;oBAC/B,OAAO,GAAW,kBAAkB,CAAC;oBACzC,IAAI,GAAG,KAAK,SAAS,EAAE;wBACrB,OAAO,GAAG,kBAAgB,GAAG,SAAM,CAAC;qBACrC;oBACK,KAAK,GAA8C,EAAE,CAAC;oBAC5D,OAAO,CAAC,WAAW,CAAC,UAAC,CAAO,IAAK,YAAK,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAvC,CAAuC,CAAC,CAAC;;wBAElE,sBAAoC,EAAlC,0BAAU,EAAE,cAAsB,CAAC;wBAC3C,IAAM,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;wBAC7C,IAAI,IAAI,YAAY,iDAAS,EAAE;4BAC7B,IAAI,CAAC,WAAW,CAAC,WAAC;gCAChB,YAAK,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,QAAQ,GAAG,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;4BAAnD,CAAmD,CACpD,CAAC;4BACF,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;yBAE1B;wBACD,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;oBAVpC,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC;;qBAWtB;oBACD,qBAAM,OAAO;6BACV,aAAa,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC;6BAC5D,IAAI,CAAC,UAAC,IAAU;4BACf,4EAA4E;4BAC5E,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;4BACzC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;4BACxB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;4BACtC,6CAA6C;4BAC7C,2CAA2C;4BAC3C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;4BAChC,IAAI,CAAC,KAAK,EAAE,CAAC;4BACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;wBAClC,CAAC,CAAC;;oBAZJ,SAYI,CAAC;;;;;CACN;;;;;;;;;;;;ACrCD,e;;;;;;;;;;;ACAA,e","file":"7.bundle.js","sourcesContent":["import { Project, Directory } from \"../models\";\nimport File from \"../storage/File\";\nimport * as JSZip from \"jszip\";\n\nexport async function downloadProject(project: Project, uri?: string) {\n  const zipFile: JSZip = new JSZip();\n  let zipName: string = \"wasm-project.zip\";\n  if (uri !== undefined) {\n    zipName = `wasm-project-${uri}.zip`;\n  }\n  const queue: Array<{ filePrefix: string; file: File }> = [];\n  project.mapEachFile((f: File) => queue.push({ filePrefix: \"\", file: f }));\n  while (queue.length > 0) {\n    const { filePrefix, file } = queue.shift();\n    const fileName = filePrefix + file.getName();\n    if (file instanceof Directory) {\n      file.mapEachFile(f =>\n        queue.push({ filePrefix: fileName + \"/\", file: f })\n      );\n      zipFile.folder(fileName);\n      continue;\n    }\n    zipFile.file(fileName, file.data);\n  }\n  await zipFile\n    .generateAsync({ type: \"blob\", mimeType: \"application/zip\" })\n    .then((blob: Blob) => {\n      // Creating <a> to programmatically click for downloading zip via blob's URL\n      const link = document.createElement(\"a\");\n      link.download = zipName;\n      link.href = URL.createObjectURL(blob);\n      // A fix for making link clickable in Firefox\n      // Explicity adding link to DOM for Firefox\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    });\n}\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}